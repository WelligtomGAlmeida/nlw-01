{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\welli\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\RocketSeat - New Level\\\\web\\\\src\\\\pages\\\\CreatePoint\\\\index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport api from '../../services/api';\nimport './styles.css';\nimport logo from \"../../assets/logo.svg\";\nimport axios from 'axios';\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  });\n  const [initialPosition, setInitialPosition] = useState([0, 0]);\n  const [selectedUf, setSelectedUf] = useState('0');\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [selectedPosition, setSelectedPosition] = useState([0, 0]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const history = useHistory;\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setInitialPosition([latitude, longitude]);\n    });\n  }, []);\n  useEffect(() => {\n    api.get('items').then(response => {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n      const ufinitials = response.data.map(uf => uf.sigla);\n      setUfs(ufinitials);\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedUf === '0') {\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then(response => {\n      const cityNames = response.data.map(city => city.nome);\n      setCities(cityNames);\n    });\n  }, [selectedUf]);\n\n  function handleSelectUf(event) {\n    const uf = event.target.value;\n    setSelectedUf(uf);\n  }\n\n  function handleSelectCity(event) {\n    const city = event.target.value;\n    setSelectedCity(city);\n  }\n\n  function handleMapClick(event) {\n    setSelectedPosition([event.latlng.lat, event.latlng.lng]);\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  function handleSelectItem(id) {\n    const alreadySelected = selectedItems.findIndex(item => item === id);\n\n    if (alreadySelected >= 0) {\n      const filteredItems = selectedItems.filter(item => item !== id);\n      setSelectedItems(filteredItems);\n    } else {\n      setSelectedItems([...selectedItems, id]);\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      whatsapp\n    } = formData;\n    const uf = selectedUf;\n    const city = selectedCity;\n    const [latitude, longitude] = selectedPosition;\n    const items = selectedItems;\n    const data = {\n      name,\n      email,\n      whatsapp,\n      uf,\n      city,\n      latitude,\n      longitude,\n      items\n    };\n    await api.post('points', data);\n    alert('Ponto de coleta criado');\n    history.push('/');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Ecoleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }), \"Voltar para a Home\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, \"Cadastro do \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 33\n    }\n  }), \" ponto de coleta\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, \"Dados\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }, \"Nome da entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 29\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 29\n    }\n  }, \"Whatsapp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"whatsapp\",\n    id: \"whatsapp\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }, \"Selecione o endere\\xE7o no mapa\")), /*#__PURE__*/React.createElement(Map, {\n    center: initialPosition,\n    zoom: 15,\n    onclick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: selectedPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  }, \"Estado (UF)\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    id: \"uf\",\n    value: selectedUf,\n    onChange: handleSelectUf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 33\n    }\n  }, \"Selecione uma UF\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    value: uf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 37\n    }\n  }, uf)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"cidade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"cidade\",\n    id: \"cidade\",\n    value: selectedCity,\n    onChange: handleSelectCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 33\n    }\n  }, \"Selecione uma cidade\"), cities.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    value: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 37\n    }\n  }, city)))))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }, \"\\xCDtens de coleta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }, \"Selecione um ou mais itens abaixo\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    onClick: () => handleSelectItem(item.id),\n    className: selectedItems.includes(item.id) ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image_url,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 33\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, \"Cadastrar ponto de coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["C:/Users/welli/OneDrive/Área de Trabalho/RocketSeat - New Level/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","useHistory","FiArrowLeft","Map","TileLayer","Marker","api","axios","CreatePoint","items","setItems","ufs","setUfs","cities","setCities","formData","setFormData","name","email","whatsapp","initialPosition","setInitialPosition","selectedUf","setSelectedUf","selectedCity","setSelectedCity","selectedPosition","setSelectedPosition","selectedItems","setSelectedItems","history","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","get","then","response","data","ufinitials","map","uf","sigla","cityNames","city","nome","handleSelectUf","event","target","value","handleSelectCity","handleMapClick","latlng","lat","lng","handleInputChange","handleSelectItem","id","alreadySelected","findIndex","item","filteredItems","filter","handleSubmit","preventDefault","post","alert","push","logo","includes","image_url","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, ChangeEvent, FormEvent } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\nimport { Map, TileLayer, Marker } from 'react-leaflet';\r\nimport api from '../../services/api';\r\n\r\nimport './styles.css';\r\nimport logo from '../../assets/logo.svg';\r\nimport axios from 'axios';\r\nimport { LeafletMouseEvent } from 'leaflet';\r\n\r\ninterface Item{\r\n    id: number;\r\n    title: string;\r\n    image_url: string;\r\n}\r\n\r\ninterface IBGEUFResponse{\r\n    sigla: string;\r\n}\r\n\r\ninterface IBGECityResponse{\r\n    nome: string;\r\n}\r\n\r\nconst CreatePoint = () => {\r\n    const[items, setItems] = useState<Item[]>([]);\r\n    const[ufs, setUfs] = useState<string[]>([]);\r\n    const[cities, setCities] = useState<string[]>([]);\r\n    \r\n    const[formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        whatsapp: ''\r\n    });\r\n\r\n    const[initialPosition, setInitialPosition] = useState<[number, number]>([0, 0]);\r\n\r\n    const[selectedUf, setSelectedUf] = useState('0');\r\n    const[selectedCity, setSelectedCity] = useState('0');\r\n    const[selectedPosition, setSelectedPosition] = useState<[number, number]>([0, 0]);\r\n    const[selectedItems, setSelectedItems] = useState<number[]>([]);\r\n    const history = useHistory;\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n            const { latitude, longitude} = position.coords;\r\n\r\n            setInitialPosition([latitude, longitude]);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        api.get('items').then( response => {\r\n            setItems(response.data);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        axios.get<IBGEUFResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\r\n            const ufinitials = response.data.map(uf => uf.sigla);\r\n\r\n            setUfs(ufinitials);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(selectedUf === '0'){\r\n            return;\r\n        }\r\n\r\n        axios.get<IBGECityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then(response => {\r\n            const cityNames = response.data.map(city => city.nome);\r\n\r\n            setCities(cityNames);\r\n        });\r\n    }, [selectedUf])\r\n\r\n    function handleSelectUf(event:ChangeEvent<HTMLSelectElement>){\r\n        const uf = event.target.value;\r\n        setSelectedUf(uf);\r\n    }\r\n\r\n    function handleSelectCity(event:ChangeEvent<HTMLSelectElement>){\r\n        const city = event.target.value;\r\n        setSelectedCity(city);\r\n    }\r\n\r\n    function handleMapClick(event:LeafletMouseEvent){\r\n        setSelectedPosition([\r\n            event.latlng.lat,\r\n            event.latlng.lng,\r\n        ]);\r\n    }\r\n\r\n    function handleInputChange(event:ChangeEvent<HTMLInputElement>){\r\n        const {name, value} = event.target;\r\n\r\n        setFormData({ ...formData, [name]: value});\r\n    }\r\n\r\n    function handleSelectItem(id: number){\r\n        const alreadySelected = selectedItems.findIndex(item => item === id);\r\n\r\n        if(alreadySelected >= 0){\r\n            const filteredItems = selectedItems.filter(item => item !== id);\r\n\r\n            setSelectedItems(filteredItems);\r\n        } else{\r\n            setSelectedItems([ ...selectedItems, id]);\r\n        }\r\n\r\n\r\n    }\r\n    \r\n    async function handleSubmit(event: FormEvent){\r\n        event.preventDefault();\r\n\r\n        const { name, email, whatsapp} = formData;\r\n        const uf = selectedUf;\r\n        const city = selectedCity;\r\n        const [latitude, longitude] = selectedPosition;\r\n        const items = selectedItems;\r\n\r\n        const data = {\r\n            name,\r\n            email,\r\n            whatsapp,\r\n            uf,\r\n            city,\r\n            latitude,\r\n            longitude,\r\n            items\r\n        };\r\n\r\n        await api.post('points', data);\r\n\r\n        alert('Ponto de coleta criado');\r\n\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div id=\"page-create-point\">\r\n            <header>\r\n                <img src={logo} alt=\"Ecoleta\"/>\r\n\r\n                <Link to=\"/\">\r\n                    <FiArrowLeft />\r\n                    Voltar para a Home\r\n                </Link>\r\n            </header>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <h1>Cadastro do <br/> ponto de coleta</h1>\r\n\r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>Dados</h2>\r\n                    </legend>\r\n                    \r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"name\">Nome da entidade</label>\r\n                        <input type=\"text\" name=\"name\" id=\"name\" onChange={handleInputChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"field-group\">\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                            <input type=\"email\" name=\"email\" id=\"email\" onChange={handleInputChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"whatsapp\">Whatsapp</label>\r\n                            <input type=\"text\" name=\"whatsapp\" id=\"whatsapp\" onChange={handleInputChange}/>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n\r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>Endereço</h2>\r\n                        <span>Selecione o endereço no mapa</span>\r\n                    </legend>\r\n\r\n                    <Map center={initialPosition} zoom={15} onclick={handleMapClick}>\r\n                        <TileLayer attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\r\n                        \r\n                        <Marker position={selectedPosition} />\r\n                    </Map>\r\n\r\n                    <div className=\"field-group\">\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"uf\">Estado (UF)</label>\r\n                            <select name=\"uf\" id=\"uf\" value={selectedUf} onChange={handleSelectUf}>\r\n                                <option value=\"0\">Selecione uma UF</option>\r\n                                {ufs.map(uf => (\r\n                                    <option value={uf}>{uf}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"cidade\">Cidade</label>\r\n                            <select name=\"cidade\" id=\"cidade\" value={selectedCity} onChange={handleSelectCity}>\r\n                                <option value=\"0\">Selecione uma cidade</option>\r\n                                {cities.map(city => (\r\n                                    <option value={city}>{city}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n\r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>Ítens de coleta</h2>\r\n                        <span>Selecione um ou mais itens abaixo</span>\r\n                    </legend>\r\n\r\n                    <ul className=\"items-grid\">\r\n                        {items.map(item => (\r\n                            <li key={ item.id } onClick={() => handleSelectItem(item.id)} className={selectedItems.includes(item.id) ? 'selected' : ''}>\r\n                                <img src={ item.image_url } alt={ item.title }/>\r\n                                <span>{ item.title }</span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </fieldset>\r\n\r\n                <button type=\"submit\">\r\n                    Cadastrar ponto de coleta\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreatePoint;"]},"metadata":{},"sourceType":"module"}